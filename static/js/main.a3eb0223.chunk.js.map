{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/CardItem.js","components/Cards/Cards.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","url","fetchData","country","a","changeableURL","axios","get","data","modifiedData","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","response","map","dailyData","total","date","reportDate","countries","CardItem","props","style","cardStyle","styles","infected","Grid","item","component","Card","xs","md","className","cx","card","CardContent","Typography","color","gutterBottom","title","variant","start","end","duration","separator","sub","Cards","Date","toDateString","container","spacing","justifyContent","value","Chart","useState","setDailyData","useEffect","getData","barChart","labels","datasets","label","backgroundColor","options","legend","display","text","lineChart","length","toLocaleDateString","borderColor","fill","CountryPicker","allCountries","setCountries","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","onCountry","target","i","name","App","setData","countryData","setCountryData","countryChangeHandler","fetchedCountryData","src","coronaImg","alt","image","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3eb0223.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Azg5\",\"card\":\"Cards_card__Nxi4g\",\"infected\":\"Cards_infected__1XkDL\",\"deaths\":\"Cards_deaths__1G3_s\",\"recovered\":\"Cards_recovered__SnzQ7\"};","import { DialogTitle } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nexport const fetchData = async (country) => {\r\n  let changeableURL = url;\r\n  if (country) {\r\n    changeableURL = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const { data } = await axios.get(changeableURL);\r\n\r\n    const modifiedData = {\r\n      confirmed: data.confirmed,\r\n      recovered: data.recovered,\r\n      deaths: data.deaths,\r\n      lastUpdate: data.lastUpdate,\r\n    };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const response = await axios.get(`${url}/daily`);\r\n    const modifiedData = response.data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const response = await axios.get(`${url}/countries`);\r\n    return response.data.countries;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nconst CardItem = (props) => {\r\n  let style = null;\r\n  switch (props.cardStyle) {\r\n    case \"infected\":\r\n      style = styles.infected;\r\n      break;\r\n    case \"deaths\":\r\n      style = styles.deaths;\r\n      break;\r\n    case \"recovered\":\r\n      style = styles.recovered;\r\n      break;\r\n  }\r\n  return (\r\n    <Grid\r\n      item\r\n      component={Card}\r\n      xs={12}\r\n      md={3}\r\n      className={cx(styles.card, style)}\r\n    >\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"h5\">\r\n          <CountUp\r\n            start={0}\r\n            end={props.data}\r\n            duration={2.5}\r\n            separator=\",\"\r\n          ></CountUp>\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">{props.date}</Typography>\r\n        <Typography variant=\"body2\">{props.sub}</Typography>\r\n      </CardContent>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport CardItem from \"./CardItem\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = (props) => {\r\n  if (!props.data) {\r\n    return <p>Loading..</p>;\r\n  }\r\n\r\n  const { confirmed, recovered, deaths, lastUpdate } = props.data;\r\n  const date = new Date(lastUpdate).toDateString();\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        <CardItem\r\n          title=\"Infected\"\r\n          date={date}\r\n          data={confirmed.value}\r\n          sub=\"Number of infected from covid19\"\r\n          cardStyle=\"infected\"\r\n        />\r\n        <CardItem\r\n          title=\"Recovered\"\r\n          date={date}\r\n          data={recovered.value}\r\n          sub=\"Number of recoveries from covid19\"\r\n          cardStyle=\"recovered\"\r\n        />\r\n        <CardItem\r\n          title=\"Deaths\"\r\n          date={date}\r\n          data={deaths.value}\r\n          sub=\"Number of deaths caused by covid19\"\r\n          cardStyle=\"deaths\"\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import { fetchDailyData } from \"../../api\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = (props) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  const barChart = props.data ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,0,255,0.5)\",\r\n              \"rgba(0,255,0,0.5)\",\r\n              \"rgba(255,0,0,0.5)\",\r\n            ],\r\n            data: [\r\n              props.data.confirmed.value,\r\n              props.data.recovered.value,\r\n              props.data.deaths.value,\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${props.country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const lineChart =\r\n    dailyData.length != 0 ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) =>\r\n            new Date(date).toLocaleDateString()\r\n          ),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map((data) => data.confirmed),\r\n              label: \"Infected\",\r\n              borderColor: \"#3333ff\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map((data) => data.deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"red\",\r\n              backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map((data) => data.recovered),\r\n              label: \"Recovered\",\r\n              borderColor: \"green\",\r\n              backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {props.country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { countries } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = (props) => {\r\n  const [allCountries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setCountries(await countries());\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const countryChangeHandler = (e) => {\r\n    props.onCountry(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={countryChangeHandler}>\r\n        <option value=\"\">Global</option>\r\n        {allCountries.map((country, i) => (\r\n          <option key={i} value={country.name}>\r\n            {country.name}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import { useEffect, useState } from \"react\";\nimport { fetchData } from \"./api\";\nimport styles from \"./App.module.css\";\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\nimport coronaImg from \"./images/image.png\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [countryData, setCountryData] = useState(null);\n\n  const getData = async () => {\n    setData(await fetchData());\n  };\n\n  useEffect(() => getData(), []);\n\n  const countryChangeHandler = async (country) => {\n    const fetchedCountryData = await fetchData(country);\n    setCountryData(country);\n    setData(fetchedCountryData);\n  };\n\n  return (\n    <div className={styles.container}>\n      <img src={coronaImg} alt=\"corona img\" className={styles.image} />\n      <Cards data={data} />\n      <CountryPicker onCountry={countryChangeHandler} />\n      <Chart data={data} country={countryData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__3u_qF\",\"container\":\"App_container__1J7Gs\",\"image\":\"App_image__2zHbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1zeqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3irdK\"};"],"sourceRoot":""}